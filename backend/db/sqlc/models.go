// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0

package db

import (
	"time"

	"github.com/google/uuid"
	"github.com/jackc/pgx/v5/pgtype"
)

type AuthSession struct {
	ID           uuid.UUID `json:"id"`
	UserID       uuid.UUID `json:"user_id"`
	RefreshToken string    `json:"refresh_token"`
	UserAgent    string    `json:"user_agent"`
	ClientIp     string    `json:"client_ip"`
	IsBlocked    bool      `json:"is_blocked"`
	ExpiresAt    time.Time `json:"expires_at"`
	CreatedAt    time.Time `json:"created_at"`
}

type ChatMessage struct {
	ID        uuid.UUID `json:"id"`
	SessionID uuid.UUID `json:"session_id"`
	Role      string    `json:"role"`
	Content   string    `json:"content"`
	CreatedAt time.Time `json:"created_at"`
}

type ChatSession struct {
	ID            uuid.UUID   `json:"id"`
	UserID        uuid.UUID   `json:"user_id"`
	Title         pgtype.Text `json:"title"`
	CreatedAt     time.Time   `json:"created_at"`
	UpdatedAt     time.Time   `json:"updated_at"`
	LastMessageAt time.Time   `json:"last_message_at"`
	IsArchived    bool        `json:"is_archived"`
	IsPublic      bool        `json:"is_public"`
	IpAddress     string      `json:"ip_address"`
}

type EmailVerification struct {
	ID         int64     `json:"id"`
	Email      string    `json:"email"`
	SecretCode string    `json:"secret_code"`
	IsUsed     bool      `json:"is_used"`
	CreatedAt  time.Time `json:"created_at"`
	ExpiredAt  time.Time `json:"expired_at"`
}

type User struct {
	ID              uuid.UUID          `json:"id"`
	Email           string             `json:"email"`
	Password        string             `json:"password"`
	Username        string             `json:"username"`
	IsEmailVerified bool               `json:"is_email_verified"`
	CreatedAt       time.Time          `json:"created_at"`
	DeletedAt       pgtype.Timestamptz `json:"deleted_at"`
}

type Waitlist struct {
	ID        uuid.UUID `json:"id"`
	Email     string    `json:"email"`
	PlanType  string    `json:"plan_type"`
	CreatedAt time.Time `json:"created_at"`
}
